"""Add rvc_species.SpeciesGroup

Revision ID: 239d0745eab7
Revises: 
Create Date: 2015-06-01 17:16:04.560424

"""

# revision identifiers, used by Alembic.
revision = '239d0745eab7'
down_revision = None
branch_labels = None
depends_on = None

from alembic import op
import sqlalchemy as sa
import logging


def upgrade():
    log=logging.getLogger('alembic')
    ### commands auto generated by Alembic - please adjust! ###
    species_group_table = op.create_table('rvc_species_speciesgroup',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Unicode(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column(u'rvc_species_sample', sa.Column('species_group_id', sa.Integer()))
    op.create_foreign_key(None, 'rvc_species_sample', 'rvc_species_speciesgroup', ['species_group_id'], ['id'])
    op.bulk_insert(species_group_table,
        [
            {'name':'Butterflyfish and Angelfish'},
            {'name':'Parrotfish, Groupers, Sweetlips, Rabbitfish, Snappers'}
        ]
    )
    conn = op.get_bind()
    betal_id = conn.execute(sa.sql.select([species_group_table.c.id]).\
        where(species_group_table.c.name=='Butterflyfish and Angelfish')).fetchone()[0]
    petal_id = conn.execute(sa.sql.select([species_group_table.c.id]).\
        where(species_group_table.c.name=='Parrotfish, Groupers, Sweetlips, Rabbitfish, Snappers')).fetchone()[0]
    res = conn.execute("""WITH petal_species AS (
  SELECT *  FROM base_species WHERE scientific_name ILIKE ANY(ARRAY['scarus%%','chlorurus%%','cephalopholis%%','lutjanus%%','siganus%%','plectorhinchus%%','epinephelus%%','macolor%%','cetoscarus%%','diplorion%%','unknown%%'])
)
, petal_observations AS (
  SELECT * FROM rvc_species_observation LEFT JOIN base_observation USING (id) WHERE species_id IN (SELECT id FROM petal_species)
)
, petal_samples AS (
  SELECT * FROM base_sample LEFT JOIN rvc_species_sample USING (id) WHERE id IN (SELECT sample_id FROM petal_observations)
)
UPDATE rvc_species_sample SET species_group_id="""+str(petal_id)+""" WHERE id IN (SELECT id FROM petal_samples)
""")
    res = conn.execute("""WITH betal_species AS (
  SELECT *  FROM base_species WHERE scientific_name ILIKE ANY(ARRAY['chaetodon%%','centropyge%%','heniochus%%','forcipiger%%','coradion%%','pomacanthus%%','apolemichthys%%','genicanthus%%','chaetodontoplus%%','pygoplites%%','hemitaurichthys%%'])
)
, betal_observations AS (
  SELECT * FROM rvc_species_observation LEFT JOIN base_observation USING (id) WHERE species_id IN (SELECT id FROM betal_species)
)
, betal_samples AS (
  SELECT * FROM base_sample LEFT JOIN rvc_species_sample USING (id) WHERE id IN (SELECT sample_id FROM betal_observations)
)
UPDATE rvc_species_sample SET species_group_id="""+str(betal_id)+""" WHERE id IN (SELECT id FROM betal_samples)
""")
    res=conn.execute("SELECT * FROM rvc_species_sample WHERE species_group_id IS NULL").fetchall()
    if len(res)>0:
        log.error("samples %s have no species group. Please check whether they have observations and what the species are.")
    op.alter_column(u'rvc_species_sample','species_group_id',nullable=False)
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'rvc_species_sample', type_='foreignkey')
    op.drop_column(u'rvc_species_sample', 'species_group_id')
    op.drop_table('rvc_species_speciesgroup')
    ### end Alembic commands ###
