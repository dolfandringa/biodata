"""Rename species_group

Revision ID: e7f256a43ab
Revises: 447417541260
Create Date: 2015-09-24 09:22:46.421422

"""

# revision identifiers, used by Alembic.
revision = 'e7f256a43ab'
down_revision = '447417541260'
branch_labels = None
depends_on = None

from alembic import op
import sqlalchemy as sa


old_views={

   'duplicate_samples': """SELECT
        s.id AS sample_id,
        s.num_occurence,
        s.date,
        s."time",
        (((base_site.name::text || ', '::text) || base_site.barangay::text) || ', '::text) || base_site.municipality::text,
        s.dataset
       FROM ( SELECT count(base_sample.id) OVER (PARTITION BY rvc_species_sample.species_group_id, base_sample.dataset, base_sample.date, base_sample."time", base_sample.site_id) AS num_occurence,
                base_sample.id,
                base_sample.date,
                base_sample."time",
                base_sample.site_id,
                base_sample.dataset,
                rvc_species_sample.species_group_id
               FROM base_sample
                 LEFT JOIN rvc_species_sample USING (id)) s
         LEFT JOIN base_site ON s.site_id = base_site.id
      WHERE s.num_occurence > 1;""",

  'rvc_species_sites': """SELECT
        base_site.name AS site,
        rvc_species_speciesgroup.name AS species_group,
        base_site.barangay,
        base_site.municipality,
        count(DISTINCT base_sample.id) AS number_of_samples
       FROM rvc_species_sample
         LEFT JOIN rvc_species_speciesgroup ON rvc_species_sample.species_group_id = rvc_species_speciesgroup.id
         LEFT JOIN base_sample ON base_sample.id = rvc_species_sample.id
         LEFT JOIN base_site ON base_sample.site_id = base_site.id
      GROUP BY base_site.id, base_site.name, base_site.barangay, base_site.municipality, rvc_species_speciesgroup.name;""",

  'rvc_species_observations': """SELECT
        base_sample.id AS sample_id,
        base_observation.id AS observation_id,
        base_site.name AS site,
        base_site.barangay,
        base_site.municipality,
        base_site.id AS site_id,
        base_sample.date,
        base_sample."time",
        rvc_species_speciesgroup.name AS species_group,
        base_observer.id AS observer_id,
        base_observer.name AS observer,
        base_species.id AS species_id,
        base_species.common_name,
        base_species.scientific_name,
        rvc_species_observation.score_0_9,
        rvc_species_observation.score_10_19,
        rvc_species_observation.score_20_29,
        rvc_species_observation.score_30_39,
        rvc_species_observation.score_40_49
       FROM rvc_species_observation
         LEFT JOIN base_observation ON base_observation.id = rvc_species_observation.id
         LEFT JOIN rvc_species_sample ON rvc_species_sample.id = base_observation.sample_id
         LEFT JOIN rvc_species_speciesgroup ON rvc_species_sample.species_group_id = rvc_species_speciesgroup.id
         LEFT JOIN base_sample ON base_sample.id = base_observation.sample_id
         LEFT JOIN base_observer ON base_observer.id = base_observation.observer_id
         LEFT JOIN base_site ON base_sample.site_id = base_site.id
         LEFT JOIN base_species ON base_species.id = rvc_species_observation.species_id
      ORDER BY rvc_species_speciesgroup.name, base_sample.date, base_sample.id, base_observer.id, base_observation.id;"""
}


def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    from model import views
    op.add_column('rvc_species_sample', sa.Column('speciesgroup_id', sa.Integer(), nullable=True))
    op.execute("UPDATE rvc_species_sample SET speciesgroup_id=species_group_id")
    op.alter_column('rvc_species_sample','speciesgroup_id',nullable=False)
    op.drop_constraint(u'rvc_species_sample_species_group_id_fkey', 'rvc_species_sample', type_='foreignkey')
    op.create_foreign_key(None, 'rvc_species_sample', 'rvc_species_speciesgroup', ['speciesgroup_id'], ['id'])
    for view in ['rvc_species_observations','duplicate_samples','rvc_species_sites']:
        op.execute('DROP VIEW %s;'%view)
    op.drop_column('rvc_species_sample', 'species_group_id')
    for view in ['rvc_species_observations','duplicate_samples','rvc_species_sites']:
        op.execute('CREATE VIEW %s AS %s;'%(view,views[view]))
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.add_column('rvc_species_sample', sa.Column('species_group_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.execute("UPDATE rvc_species_sample SET species_group_id=speciesgroup_id")
    op.alter_column('rvc_species_sample','species_group_id',nullable=False)
    op.drop_constraint(u'rvc_species_sample_speciesgroup_id_fkey', 'rvc_species_sample', type_='foreignkey')
    op.create_foreign_key(u'rvc_species_sample_species_group_id_fkey', 'rvc_species_sample', 'rvc_species_speciesgroup', ['species_group_id'], ['id'])
    for view in ['rvc_species_observations','duplicate_samples','rvc_species_sites']:
        op.execute('DROP VIEW %s;'%view)
    op.drop_column('rvc_species_sample', 'speciesgroup_id')
    for view in ['rvc_species_observations','duplicate_samples','rvc_species_sites']:
        op.execute('CREATE VIEW %s AS %s;'%(view,old_views[view]))
    ### end Alembic commands ###
